{"version":3,"file":"static/js/172.b33ed1d9.chunk.js","mappings":"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","sources":["other/Modal.jsx","other/Path.jsx","../../../src/native-browser.ts","../../../src/rng-browser.ts","../../../src/stringify.ts","../../../src/v4.ts","pages/ProductPage.jsx"],"sourcesContent":["import { FcOk } from \"react-icons/fc\";\r\nimport {useSpring, animated, useTransition} from '@react-spring/web' // Добавили анимацию с помощью react spring\r\n\r\nconst Modal = ({title}) => {\r\n\r\n    const slideDown = useSpring({\r\n        from: { transform: 'translateY(-100%)', opacity: 0 },\r\n        to: { transform: 'translateY(0)', opacity: 1 },\r\n        config: { tension: 200, friction: 20 },\r\n    });\r\n\r\n    const scaleAndSlide = useSpring({\r\n        from: { transform: 'scale(0.8) translateY(-20px)', opacity: 0 },\r\n        to: { transform: 'scale(1) translateY(0)', opacity: 1 },\r\n        config: { tension: 220, friction: 18 },\r\n    });\r\n\r\n    const fadeInBlur = useSpring({\r\n        from: { opacity: 0, filter: 'blur(10px)' },\r\n        to: { opacity: 1, filter: 'blur(0px)' },\r\n        config: { duration: 300 },\r\n    });\r\n\r\n    const slideLeftAndRotate = useSpring({\r\n        from: { transform: 'translateX(-100%) rotate(-10deg)', opacity: 0 },\r\n        to: { transform: 'translateX(0) rotate(0deg)', opacity: 1 },\r\n        config: { tension: 250, friction: 20 },\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n            <animated.div style={fadeInBlur}> {/* Так мы не трогаем задний фон а создаём анимацию только для самого окна */}\r\n                <div className=\"modal-wrap md:min-w-96 xs:max-w-72 md:max-w-max bg-white shadow-lg p-6 text-center\">\r\n                <div className=\"flex justify-end items-center border-gray-200\">\r\n            </div>\r\n                <FcOk className=\"text-center mx-auto text-5xl\"/>\r\n                <h1 className=\"modal-accept xs:text-md md:text-xl mt-4 uppercase font-light\">{title}</h1>\r\n            </div>\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport GetApi from '../Api/GetCatalogApi';\r\nimport slugify from 'slugify'; // Библиотека для транслитерации, она делает обычное название с русского на транслите английского, в целом она делает URL-friendly\r\nimport { Fragment } from 'react';\r\n\r\nconst Path = ({className}) => {\r\n    const [pathData, setPathData] = useState([]);\r\n    const location = useLocation(); // Текущая локация, путь в url и другие данные\r\n    const pathnames = location.pathname.split('/').filter((x) => x); // Путь к роуту\r\n    console.log(pathnames)\r\n\r\n    const getApi = new GetApi();\r\n\r\n    useEffect(() => {\r\n        getProduct();\r\n    }, []);\r\n\r\n    const getProduct = async () => {\r\n        try {\r\n            const data = await getApi.getApi();\r\n            // Добавляем к каждому элементу slug для соответствия пути\r\n            const dataWithSlugs = data.map(item => ({\r\n                ...item, slug: slugify(item.title, { lower: true, locale: 'ru' })\r\n            }));\r\n            setPathData(dataWithSlugs);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <nav className={`${className} my-6`} aria-label=\"Breadcrumb\">\r\n            <ol className=\"flex flex-wrap items-center gap-2 text-sm text-gray-600\">\r\n            <li>\r\n                <Link to=\"/\" className=\"block transition hover:text-gray-700\">\r\n                <span className=\"sr-only\">Home</span>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"w-5 h-5 md:w-6 md:h-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                >\r\n                    <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                    />\r\n                </svg>\r\n                </Link>\r\n            </li>\r\n\r\n            {pathnames.map((value, index) => {\r\n                const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                const currentItem = pathData.find((item) => item.slug === value);\r\n\r\n                return (\r\n                <Fragment key={to}>\r\n                    <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    strokeWidth=\"1.5\"\r\n                    stroke=\"currentColor\"\r\n                    className=\"w-4 h-4 md:w-5 md:h-5 text-gray-500\"\r\n                    >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 20.247l6-16.5\" />\r\n                    </svg>\r\n                    <li>\r\n                    <Link\r\n                        to={to}\r\n                        className=\"block transition hover:text-gray-700 text-base md:text-sm font-medium whitespace-nowrap truncate max-w-[100px] md:max-w-none\"\r\n                    >\r\n                        {currentItem ? currentItem.title : value}\r\n                    </Link>\r\n                    </li>\r\n                </Fragment>\r\n                );\r\n            })}\r\n            </ol>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Path;",null,null,null,null,"import GetApiFromJson from \"../Api/GetCatalogApi\";\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport Path from \"../other/Path\";\r\nimport { FaShoppingCart } from 'react-icons/fa'; // Импортируем иконку корзины\r\nimport { useProductContext } from \"../hooks/useProductContext\";\r\nimport Modal from \"../other/Modal\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'; // Добавили библиотеку которая создаёт уникальный идентификатор\r\n\r\nimport slugify from 'slugify'; // Библиотека для транслитерации, она делает обычное название с русского на транслите английского, в целом она делает URL-friendly\r\n\r\nconst ProductPage = () => {\r\n  const { setBasketData, setSelectSize, selectSize, openModal, setOpenModal } = useProductContext();\r\n\r\n  const location = useLocation();\r\n  console.log(location)\r\n  const [itemInfo, setItemInfo] = useState([]);\r\n  const [product, setProduct] = useState();\r\n  const [disabled, setDisabled] = useState(false) // Отключении кнопки\r\n\r\n  const { itemDetailTitle } = useParams();  // Получаем параметры из URL\r\n  console.log(itemDetailTitle)\r\n\r\n  const getApi = new GetApiFromJson();\r\n\r\n  useEffect(() => {\r\n    getProductApi();\r\n  }, [])\r\n\r\n  const getProductApi = async () => {\r\n    try {\r\n        const data = await getApi.getApi();\r\n        setItemInfo(data);\r\n    } catch(err) {\r\n        throw new err;\r\n    }\r\n  }\r\n\r\n  const getCardToBasket = () => {\r\n    const uniqueId = uuidv4(); // Уникальный идентификатор\r\n    if (product.category === 'bags') {\r\n      setBasketData((prevBasketData) => [...prevBasketData, { ...product, size: '', id: uniqueId}]);\r\n    } else {\r\n      setBasketData((prevBasketData) => [...prevBasketData, { ...product, size: selectSize, id: uniqueId}]);\r\n    }\r\n    setDisabled(true);\r\n\r\n    setOpenModal(true)\r\n\r\n    setTimeout(() => {\r\n      setDisabled(false);\r\n      setOpenModal(false)\r\n    }, 1500);\r\n\r\n    console.log('Товар отправлен в корзину')\r\n    console.log(selectSize)\r\n  }\r\n\r\n  useEffect(() => {\r\n      if (itemInfo.length > 0) {\r\n        getProduct();\r\n      }\r\n  }, [location.pathname, itemInfo]);  // Это было сделано для того чтобы при переходе на другую карточку товара мы перерисовывали данные\r\n\r\n  const getProduct = () => {\r\n    const currentItem = itemInfo.find(item => slugify(item.title, { lower: true, locale: 'ru' }) === itemDetailTitle);\r\n    console.log(currentItem)\r\n    if (currentItem) {\r\n      setProduct(currentItem);\r\n    }\r\n  };\r\n\r\n  const selectChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectSize(selectedValue.toUpperCase())\r\n  }\r\n\r\n  return (\r\n    <section className=\"card-item h-full md:py-8 xs:py-0 bg-gray-50\">\r\n      <div className=\"card-container my-11 md:w-full w-3/4 mx-auto flex justify-center md:flex-nowrap xs:flex-wrap xs:w-11/12\">\r\n        {product && (\r\n          <>\r\n            <img \r\n              src={require(`../img/${product.image}`)} \r\n              alt={product.name} \r\n              className=\"card-img xs:w-full object-cover md:mr-6 md:w-max\"\r\n            />\r\n  \r\n            <div className=\"card-wrap  p-6 md:w-1/3 xs:w-full flex flex-col text-left h-full xs:mt-4 md:mt-0\">\r\n              <Path />\r\n              <h1 className=\"card-title mt-4 text-2xl text-gray-800 font-normal\tfont-mono mb-3 lg:text-3xl md:text-2xl xs:text-xl\">\r\n                {product.title}\r\n              </h1>\r\n\r\n              <div className=\"card-price font-mono text-lg text-gray-600 font-medium mb-4\">\r\n                <span className=\"text-gray-500\">Ціна: </span>{product.price} ₴\r\n              </div>\r\n\r\n              {product.category === 'bags' ? null : <div className=\"card-size font-mono\ttext-gray-600 mb-5\">\r\n                <label htmlFor=\"size\" className=\"mr-2\">Розмір:</label>\r\n                <select\r\n                  onChange={(e) => selectChange(e)}\r\n                  id=\"size\" \r\n                  className=\"border border-gray-300 rounded-md px-3 py-1 focus:outline-none focus:border-gray-500\"\r\n                >\r\n                  <option value=\"s\">S</option>\r\n                  <option value=\"m\">M</option>\r\n                  <option value=\"l\">L</option>\r\n                  <option value=\"xl\">XL</option>\r\n                  <option value=\"2xl\">2XL</option>\r\n                </select>\r\n              </div>}\r\n\r\n              <div className=\"card-descr font-mono text-gray-600 text-base leading-relaxed mb-4\">\r\n                <span className=\"text-gray-500\">Опис товару: </span>{product.descr}\r\n              </div>\r\n\r\n              <button\r\n                disabled={disabled}\r\n                onClick={getCardToBasket}\r\n                type=\"button\" \r\n                className=\"mt-4 font-mono w-max\t bg-gray-800 text-white hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-md text-base px-4 py-2 transition-colors duration-200 flex justify-center items-center\"\r\n              >\r\n                <FaShoppingCart className=\"mr-2\" />{disabled ? 'Зачекайте...' : 'Додати в кошик'}\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {openModal ? <Modal title={'Товар додано до кошику'}/> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n\r\n// Вроде всё работает"],"names":["_ref","title","useSpring","from","transform","opacity","to","config","tension","friction","fadeInBlur","filter","duration","_jsx","className","children","_jsxs","animated","div","style","FcOk","pathData","setPathData","useState","pathnames","useLocation","pathname","split","x","console","log","getApi","GetApi","useEffect","getProduct","async","dataWithSlugs","map","item","slug","slugify","lower","locale","err","Link","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","index","slice","join","currentItem","find","Fragment","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","options","buf","native","rnds","random","ProductPage","setBasketData","setSelectSize","selectSize","openModal","setOpenModal","useProductContext","location","itemInfo","setItemInfo","product","setProduct","disabled","setDisabled","itemDetailTitle","useParams","GetApiFromJson","getProductApi","data","_Fragment","src","require","image","alt","name","Path","price","category","htmlFor","onChange","e","event","selectedValue","target","toUpperCase","selectChange","id","descr","onClick","getCardToBasket","uniqueId","uuidv4","prevBasketData","size","setTimeout","type","FaShoppingCart","Modal"],"sourceRoot":""}