{"version":3,"file":"static/js/710.79429aec.chunk.js","mappings":"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","sources":["other/Modal.jsx","other/Path.jsx","other/Form.jsx","pages/BasketPage.jsx"],"sourcesContent":["import { FcOk } from \"react-icons/fc\";\r\nimport {useSpring, animated, useTransition} from '@react-spring/web' // Добавили анимацию с помощью react spring\r\n\r\nconst Modal = ({title}) => {\r\n\r\n    const slideDown = useSpring({\r\n        from: { transform: 'translateY(-100%)', opacity: 0 },\r\n        to: { transform: 'translateY(0)', opacity: 1 },\r\n        config: { tension: 200, friction: 20 },\r\n    });\r\n\r\n    const scaleAndSlide = useSpring({\r\n        from: { transform: 'scale(0.8) translateY(-20px)', opacity: 0 },\r\n        to: { transform: 'scale(1) translateY(0)', opacity: 1 },\r\n        config: { tension: 220, friction: 18 },\r\n    });\r\n\r\n    const fadeInBlur = useSpring({\r\n        from: { opacity: 0, filter: 'blur(10px)' },\r\n        to: { opacity: 1, filter: 'blur(0px)' },\r\n        config: { duration: 300 },\r\n    });\r\n\r\n    const slideLeftAndRotate = useSpring({\r\n        from: { transform: 'translateX(-100%) rotate(-10deg)', opacity: 0 },\r\n        to: { transform: 'translateX(0) rotate(0deg)', opacity: 1 },\r\n        config: { tension: 250, friction: 20 },\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n            <animated.div style={fadeInBlur}> {/* Так мы не трогаем задний фон а создаём анимацию только для самого окна */}\r\n                <div className=\"modal-wrap md:min-w-96 xs:max-w-72 md:max-w-max bg-white shadow-lg p-6 text-center\">\r\n                <div className=\"flex justify-end items-center border-gray-200\">\r\n            </div>\r\n                <FcOk className=\"text-center mx-auto text-5xl\"/>\r\n                <h1 className=\"modal-accept xs:text-md md:text-xl mt-4 uppercase font-light\">{title}</h1>\r\n            </div>\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport slugify from 'slugify'; // Библиотека для транслитерации, она делает обычное название с русского на транслите английского, в целом она делает URL-friendly\r\nimport { Fragment } from 'react';\r\n\r\nimport { useProductContext } from '../hooks/useProductContext';\r\n\r\nconst Path = ({className}) => {\r\n    const [pathData, setPathData] = useState([]);\r\n    const {productData} = useProductContext();\r\n    const location = useLocation(); // Текущая локация, путь в url и другие данные\r\n    const pathnames = location.pathname.split('/').filter((x) => x); // Путь к роуту\r\n    console.log(pathnames)\r\n\r\n    useEffect(() => {\r\n        const dataWithSlugs = productData.map(item => ({...item, slug: slugify(item.title, { lower: true, locale: 'ru' })\r\n        }));\r\n        setPathData(dataWithSlugs);\r\n    }, []);\r\n    \r\n    return (\r\n        <nav className={`${className} my-6`} aria-label=\"Breadcrumb\">\r\n            <ol className=\"flex flex-wrap items-center gap-2 text-sm text-gray-600\">\r\n            <li>\r\n                <Link to=\"/\" className=\"block transition hover:text-gray-700\">\r\n                <span className=\"sr-only\">Home</span>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"w-5 h-5 md:w-6 md:h-6\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                >\r\n                    <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                    />\r\n                </svg>\r\n                </Link>\r\n            </li>\r\n\r\n            {pathnames.map((value, index) => {\r\n                const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                const currentItem = pathData.find((item) => item.slug === value);\r\n\r\n                return (\r\n                <Fragment key={to}>\r\n                    <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    strokeWidth=\"1.5\"\r\n                    stroke=\"currentColor\"\r\n                    className=\"w-4 h-4 md:w-5 md:h-5 text-gray-500\"\r\n                    >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 20.247l6-16.5\" />\r\n                    </svg>\r\n                    <li>\r\n                    <Link\r\n                        to={to}\r\n                        className=\"block transition hover:text-gray-700 text-base md:text-sm font-medium whitespace-nowrap truncate max-w-[100px] md:max-w-none\"\r\n                    >\r\n                        {currentItem ? currentItem.title : value}\r\n                    </Link>\r\n                    </li>\r\n                </Fragment>\r\n                );\r\n            })}\r\n            </ol>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Path;","import { useState, useEffect } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useProductContext } from \"../hooks/useProductContext\";\r\n\r\nimport axios from \"axios\";\r\nimport Select from 'react-select'\r\n\r\nconst PaymentForm = () => {\r\n    const [cityData ,setCityData] = useState([]);\r\n    const [branchData, setBranchData] = useState([]);\r\n    const [cityDescr, setCityDescr] = useState('');\r\n    const [deliveryMethod, setDeliveryMethod] = useState('')\r\n\r\n    const {setBasketData, openModal, setOpenModal, basketData} = useProductContext();\r\n\r\n    const citiesData = [ // Так как у новой почты нет api с городами приходится изощеряться\r\n        \"Київ\",\r\n        \"Харків\",\r\n        \"Одеса\",\r\n        \"Дніпро\",\r\n        \"Запоріжжя\",\r\n        \"Львів\",\r\n        \"Кривий Ріг\",\r\n        \"Миколаїв\",\r\n        \"Вінниця\",\r\n        \"Херсон\",\r\n        \"Полтава\",\r\n        \"Чернігів\",\r\n        \"Черкаси\",\r\n        \"Суми\",\r\n        \"Житомир\",\r\n        \"Хмельницький\",\r\n        \"Рівне\",\r\n        \"Івано-Франківськ\",\r\n        \"Тернопіль\",\r\n        \"Луцьк\",\r\n        \"Ужгород\",\r\n        \"Чернівці\"\r\n    ];\r\n    \r\n    const { register, handleSubmit, watch, reset, setValue, getValues, control, formState: {errors} } = useForm()\r\n\r\n    const getCity = async () => {\r\n        try {\r\n            const response = await axios.post('https://api.novaposhta.ua/v2.0/json/', {\r\n                apiKey: \"c307c39437e0ab84d133a2266fb9465e\",\r\n                modelName: \"Address\",\r\n                calledMethod: \"getCities\",\r\n                methodProperties: {}\r\n            });\r\n    \r\n            const cities = response.data.data.filter(item => citiesData.includes(item.Description))\r\n            setCityData(cities);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных:', error);\r\n        }\r\n    };\r\n\r\n    const getBranch = async (selectedCity) => {\r\n        try {\r\n            const response = await axios.post('https://api.novaposhta.ua/v2.0/json/', {\r\n                apiKey: \"c307c39437e0ab84d133a2266fb9465e\",\r\n                modelName: \"AddressGeneral\",\r\n                calledMethod: \"getWarehouses\",\r\n                methodProperties: {\r\n                    CityName: selectedCity,\r\n                    limit: \"5\",\r\n                    page: \"1\"\r\n                }\r\n            });\r\n\r\n            const branchType = response.data.data.filter(item => item.CategoryOfWarehouse === 'Branch');\r\n            setBranchData(branchType);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных:', error);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n\r\n        try {\r\n            const request = await axios.post('http://localhost:5000/api/form', data);\r\n            console.log(request)\r\n\r\n            reset();\r\n            setBasketData([]) // Иммитация удаления оформленных товаров\r\n            setOpenModal(!openModal)\r\n            setValue('delivery', null);\r\n            setValue('city', null);\r\n            setValue('branche', null)\r\n\r\n            return request;\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            reset();\r\n            setBasketData([]) // Иммитация удаления оформленных товаров\r\n            setOpenModal(!openModal)\r\n            setValue('delivery', null);\r\n            setValue('city', null);\r\n            setValue('branche', null)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValue('cards', basketData);\r\n    }, [basketData, setValue]);\r\n\r\n    useEffect(() => {\r\n        getCity();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getBranch(cityDescr);\r\n    }, [cityDescr])\r\n\r\n    return (\r\n        <form id='payment-form' className=\"payment-form my-4\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"payment-container flex justify-evenly pt-3 flex-wrap\">\r\n\r\n                <div className=\"payment-client flex flex-col min-w-64\">\r\n                    <h1 className=\"payment-client__title text-xl font-medium mb-4 mt-4\">Дані покупця</h1>\r\n                    <div>\r\n                        <input placeholder=\"ПІБ\" type=\"text\" className=\"min-h-8 text-xm pl-2 border-b-2 text-gray-500 outline-none p-3\"\r\n                        {...register('name', {\r\n                            required: 'Введіть ваше ім я',\r\n                            minLength: {\r\n                                value: 10,\r\n                                message: 'Введіть корректний ПІБ'\r\n                            },\r\n                        })}\r\n                        />\r\n                        {errors.name && <p className=\"text-sm text-red-600 mt-2\">{errors.name.message}</p>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input placeholder=\"email\" type=\"text\" className=\"min-h-8 text-xm pl-2 border-b-2 text-gray-500 outline-none p-3\"\r\n                        {...register('email', {\r\n                            required: 'Введіть електронну адресу',\r\n                            pattern: {\r\n                                value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n                                message: \"Введите корректный email\",\r\n                            },\r\n                        })}\r\n                        />\r\n                        {errors.email && <p className=\"text-sm text-red-600 mt-2\">{errors.email.message}</p>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input placeholder=\"Номер телефону\" type=\"number\" className=\"min-h-8 text-xm pl-2 border-b-2 text-gray-500 outline-none p-3\"\r\n                        {...register('phone', {\r\n                            required: 'Введіть номер телефону',\r\n                            minLength: {\r\n                                value: 12\r\n                            },\r\n                            maxLength: {\r\n                                value: 12\r\n                            },\r\n                        })}\r\n                        />\r\n                        {errors.phone && <p className=\"text-sm text-red-600 mt-2\">{errors.phone.message}</p>}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"payment-delivery\">\r\n                <h1 className=\"payment-delivery__title text-xl font-medium mb-4 mt-4\">Доставка</h1>\r\n                    <div className=\"p-3\">\r\n                        <Controller // Используется для интеграции компонентов и связывает компонент с react-hook-form через name и control\r\n                            name='delivery'\r\n                            control={control}\r\n                            rules={{required: 'Обов язкове поле'}}\r\n                            render={({ field }) => ( // render(field) передаёт нам методы onchange и value \r\n                            <Select\r\n                                {...field}\r\n                                placeholder='Спосіб доставки'\r\n                                className=\"md:max-w-96 md:min-w-96 text-xm text-left\"\r\n                                options={[{\r\n                                    label: 'Нова пошта', value: 'Нова пошта'}, {label: 'Нова пошта(кур єр)', value: 'Нова пошта(кур єр)'}\r\n                                ]}\r\n                                onChange={(selectedOption) => {\r\n                                    field.onChange(selectedOption); // Для react-hook-form\r\n                                    setDeliveryMethod(selectedOption.label); // Дополнительное действие\r\n                                }}\r\n                            />   \r\n                            )}\r\n                        />\r\n                        {errors.delivery && <p className=\"text-sm text-red-600 mt-2\">{errors.delivery.message}</p>}\r\n                    </div>\r\n\r\n                    {deliveryMethod === 'Нова пошта(кур єр)' \r\n                    ?\r\n                    <div className=\"p-3\">\r\n                        <input placeholder=\"Введіть вашу адресу\" type=\"text\" className=\"min-h-8 text-xm pl-2 border-b-2 text-gray-500 outline-none p-3\"\r\n                        {...register('address', {\r\n                            required: 'Обов язкове поле',\r\n                            minLength: {\r\n                                value: 5,\r\n                            },\r\n                        })}\r\n                        />\r\n                        {errors.address && <p className=\"text-sm text-red-600 mt-2\">{errors.address.message}</p>}\r\n                    </div>\r\n                    : <>\r\n                        <div className=\"p-3\">\r\n                            <Controller // Используется для интеграции компонентов и связывает компонент с react-hook-form через name и control\r\n                                name='city'\r\n                                control={control}\r\n                                rules={{required: 'Обов язкове поле'}}\r\n                                render={({ field }) => ( // render(field) передаёт нам методы onchange и value \r\n                                <Select\r\n                                    {...field}\r\n                                    placeholder='Оберіть місто'\r\n                                    className=\"md:max-w-96 md:min-w-96 text-xm text-left\"\r\n                                    options={cityData.map(item => ({\r\n                                        label: item.Description,\r\n                                        value: item.Ref \r\n                                    }))}\r\n                                    \r\n                                    onChange={(selectedOption) => {\r\n                                        field.onChange(selectedOption); // Для react-hook-form\r\n                                        setCityDescr(selectedOption.label); // Дополнительное действие\r\n                                    }}\r\n                                />\r\n                                )}\r\n                            />\r\n                            {errors.city && <p className=\"text-sm text-red-600 mt-2\">{errors.city.message}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"p-3\">\r\n                            <Controller // Используется для интеграции компонентов и связывает компонент с react-hook-form через name и control\r\n                                name='branche'\r\n                                control={control}\r\n                                rules={{required: 'Обов язкове поле'}}\r\n                                render={({ field }) => ( // render(field) передаёт нам методы onchange и value \r\n                                <Select\r\n                                    {...field}\r\n                                    placeholder='Оберіть відділення'\r\n                                    className=\"md:max-w-96 md:min-w-96 text-xm text-left\"\r\n                                    options={cityDescr ? branchData.map(item => ({\r\n                                        label: item.Description,\r\n                                        value: item.Ref\r\n                                    })) : []}\r\n                                    isLoading\r\n                                    onChange={(selectedOption) => {\r\n                                        field.onChange(selectedOption); // Для react-hook-form\r\n                                        setCityDescr(selectedOption.label); // Дополнительное действие\r\n                                    }}\r\n                                />\r\n                                )}\r\n                            />\r\n                            {errors.branche && <p className=\"text-sm text-red-600 mt-2\">{errors.branche.message}</p>}\r\n                        </div>\r\n                    </>}\r\n                </div>\r\n\r\n                <div className=\"payment-type min-w-64\">\r\n                    <h1 className=\"payment-type__title text-xl font-medium mb-4 mt-4\">Оплата</h1>\r\n                    \r\n                    <div className=\"flex items-baseline flex-col\">\r\n                        <div className=\"payment-type__wrap\">\r\n                        <input id=\"payment-delivery\" name='payment' type=\"radio\" value='payment-delivery'\r\n                        {...register('payment' , {\r\n                            required: 'Оберіть тип оплати'\r\n                        })}\r\n                        />\r\n                            <label htmlFor=\"payment-delivery\" className=\"font-light text-xm ml-2\">\r\n                                Оплата при отриманні\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"payment-type__wrap pt-2\">\r\n                        <input id=\"payment-card\" name='payment' type=\"radio\" value='payment-card'\r\n                        {...register('payment' , {\r\n                            required: 'Оберіть тип оплати'\r\n                        })}\r\n                        />\r\n                            <label htmlFor=\"payment-card\" className=\"font-light text-xm ml-2\">\r\n                                Оплата карткою Visa/Mastercard\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {errors.payment && <p className=\"text-sm text-red-600 mt-2\">{errors.payment.message}</p>}\r\n                </div>\r\n\r\n                <input \r\n                type=\"hidden\"\r\n                {...register('cards')}\r\n                />\r\n                \r\n            </div>\r\n            <button\r\n                disabled={openModal}\r\n                type=\"submit\"\r\n                className=\"form-button w-full md:w-auto px-6 py-3 mt-6 bg-gray-800 text-white font-semibold transition-all duration-300 hover:bg-gray-600 shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\r\n            >\r\n                {openModal ? 'Зачекайте...' : 'Оформити товар'}\r\n            </button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PaymentForm;","import Path from \"../other/Path\";\r\nimport empty from \"../img/empty-cart.png\"\r\nimport PaymentForm from '../other/Form'\r\nimport Modal from \"../other/Modal\";\r\n\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useProductContext } from \"../hooks/useProductContext\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst BasketPage = () => {\r\n\r\n    const {basketData, setBasketData, selectSize, openModal, setOpenModal} = useProductContext();\r\n    console.log(basketData)\r\n    \r\n    useEffect(() => {\r\n        console.log(openModal)\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            setOpenModal(false);\r\n        }, 3000);\r\n    \r\n        return () => {\r\n            clearTimeout(timeoutId); // Очистка таймаута при размонтировании, сделать так же везде\r\n        };\r\n    }, [openModal])\r\n\r\n    const deleteCard = (id) => {\r\n        setBasketData((prevBasketData) => prevBasketData.filter(item => item.id !== id))\r\n    }\r\n    console.log(selectSize)\r\n\r\n    const totalPrice = basketData.reduce((acc, item) => acc + item.price, 0);\r\n        \r\n    useEffect(() => {\r\n        console.log(\"Обновление данных корзины:\", basketData);\r\n        console.log(\"Сумма корзины:\", totalPrice);\r\n    }, [basketData]);\r\n    return (\r\n        <>\r\n        <section className=\"basket\">\r\n            <div className=\"basket-container flex flex-col h-full lg:w-5/6 xl:w-9/12 mx-auto xs:w-11/12 text-center xs:py-4 xs:my-0\">\r\n                <h1 className=\"basket-title md:mt-12 xs:mt-0 font-medium md:w-max mx-auto text-center md:text-2xl lg:text-3xl uppercase xs:w-max xs:text-xl xl:text-3xl text-black p-2\">\r\n                    Кошик товарів\r\n                </h1>\r\n                <span className=\"line h-0.5 block bg-gray-500 md:w-40 xs:w-28 mx-auto\"></span>\r\n                <Path/>\r\n                \r\n                <div className=\"basket-wrap flex flex-wrap xs:flex-col md:flex-row justify-around\">\r\n\r\n                    <div className=\"basket-item\">\r\n                    {basketData.length > 0 ? (basketData.map((item) => (\r\n                    <div key={item.id} className=\"basket-item-wrapper\">\r\n                        <span className=\"line block h-px bg-gray-300\"></span>\r\n                        \r\n                        <div className=\"basket-item flex flex-col md:flex-row items-center md:justify-around space-y-4 md:space-y-0 my-10\">\r\n                            <div className=\"basket-item__info flex xs:flex-col md:flex-row items-center md:w-3/4 text-center md:text-left space-y-2 md:space-y-0\">\r\n                                <img\r\n                                    src={require(`../img/${item.image}`)}\r\n                                    alt={item.title}\r\n                                    className=\"basket-item__image xs:w-2/4 mx-auto md:mx-0 h-auto w-3/4 md:w-1/5 lg:w-1/6 object-cover\"\r\n                                />\r\n                                <div className=\"basket-item__details ml-0 md:ml-4 mt-2 md:mt-0 flex-1\">\r\n                                    <h1 className=\"font-light xs:text-lg md:text-lg lg:text-xl text-gray-800 uppercase\">\r\n                                        {item.title}\r\n                                    </h1>\r\n                                </div>\r\n                                <div className=\"basket-price text-lg md:text-xl font-semibold text-gray-700 mt-1\">\r\n                                        {item.price} ₴\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"basket-item__size text-gray-600 text-sm md:text-base font-medium\">\r\n                                {(item.size) || (item.category === 'bags' ? null : null)}\r\n                            </div>\r\n                            \r\n                            <button \r\n                                className=\"basket-item__trash text-gray-500 hover:text-red-600 transition-colors duration-200 mt-2 md:mt-0\"\r\n                                onClick={() => deleteCard(item.id)}\r\n                            >\r\n                                <FaTrash size={18} />\r\n                            </button>\r\n                        </div>\r\n                        \r\n                        <span className=\"line block h-px bg-gray-300\"></span>\r\n                    </div>\r\n                    ))) : <>\r\n                            <img src={empty} alt=\"\" className=\"basket-empty__card w-max h-auto mt-4 mx-auto\"/>\r\n                            <h1 className=\"basket-empty__title md:text-xl text-center font-mono py-3.5\">У вашому кошику немає товарів</h1>\r\n                        </>\r\n                    }\r\n                    </div>\r\n\r\n                    {basketData.length > 0 ? \r\n                    <div className=\"basket-total__wrap xs:w-full xs:mx-auto md:mx-0 md:mt-4 2xl:mt-0 md:my-0 xs:my-4 h-max items-start p-4 shadow-lg max-w-64 border bg-zinc-300\">\r\n                        <h1 className=\"basket-total__title xs:text-sm md:text-md uppercase font-normal text-black\">\r\n                                Сума оплати за товар\r\n                            </h1>\r\n                            \r\n                            <div className=\"basket-total__price w-max md:text-md mx-auto xs:text-xl md:text-3xl font-normal xs:my-3 py-4 text-black border-t border-b border-gray-600\">\r\n                                {totalPrice} грн\r\n                            </div>\r\n\r\n                            <ScrollLink\r\n                            to=\"payment-form\"\r\n                            smooth={true}\r\n                            duration={500}\r\n                            >\r\n                            <button className='bg-primary border-primary border inline-flex items-center justify-center py-3 px-5 text-center text-sm font-medium text-white hover:bg-[#1B44C8] hover:border-[#1B44C8] disabled:bg-gray-3 disabled:border-gray-3 disabled:text-dark-5 active:bg-[#1B44C8] active:border-[#1B44C8]'>\r\n                                Перейти до оформлення\r\n                            </button>\r\n                            </ScrollLink>\r\n                    </div>\r\n                    : null}\r\n                </div>\r\n\r\n                <Link className=\"w-max h-max my-8 mx-auto\" to='/'>\r\n                    <button type=\"button\" className=\"px-4 md:py-2.5 md:px-6 p-3 bg-gray-800 text-white font-semibold transition-all duration-300 hover:bg-gray-600 shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\">\r\n                        Повернутися до магазину\r\n                    </button>\r\n                </Link>\r\n            \r\n            {basketData.length > 0 ? <div>\r\n                <div className=\"line w-1/4 h-0.5 bg-gray-400 mx-auto my-4\"></div>\r\n                <h1 className=\"payment-title text-center text-2xl uppercase font-light pt-4\">Оформлення замовлення</h1>\r\n                <PaymentForm/>\r\n            </div> : null}\r\n            \r\n            </div>\r\n\r\n            {openModal ? <Modal title={'Товар успішно оформлено'}/> : null}\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BasketPage;\r\n\r\n// Вроде как работает чётко, после добавления уникального идентификатора всё чётко"],"names":["_ref","title","useSpring","from","transform","opacity","to","config","tension","friction","fadeInBlur","filter","duration","_jsx","className","children","_jsxs","animated","div","style","FcOk","pathData","setPathData","useState","productData","useProductContext","pathnames","useLocation","pathname","split","x","console","log","useEffect","dataWithSlugs","map","item","slug","slugify","lower","locale","Link","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","index","slice","join","currentItem","find","Fragment","PaymentForm","cityData","setCityData","branchData","setBranchData","cityDescr","setCityDescr","deliveryMethod","setDeliveryMethod","setBasketData","openModal","setOpenModal","basketData","citiesData","register","handleSubmit","watch","reset","setValue","getValues","control","formState","errors","useForm","async","cities","axios","post","apiKey","modelName","calledMethod","methodProperties","data","includes","Description","error","getCity","branchType","CityName","selectedCity","limit","page","CategoryOfWarehouse","getBranch","id","onSubmit","request","e","placeholder","type","required","minLength","message","name","pattern","email","maxLength","phone","Controller","rules","render","field","Select","options","label","onChange","selectedOption","delivery","address","_Fragment","_ref2","Ref","city","_ref3","isLoading","branche","htmlFor","payment","disabled","BasketPage","selectSize","timeoutId","setTimeout","clearTimeout","totalPrice","reduce","acc","price","Path","length","src","require","image","alt","size","category","onClick","deleteCard","prevBasketData","FaTrash","empty","ScrollLink","smooth","Modal"],"sourceRoot":""}